{"version":3,"sources":["components/NavBar.js","components/userpage/wordcard.js","components/userpage/wordlist.js","components/userpageContainer.js","components/database/wordcard.js","components/database/wordlist.js","components/SearchBar.js","components/databaseContainer.js","components/Form.js","components/profile.js","AuthenticatedApp.js","components/Login.js","components/Signup.js","UnauthenticatedApp.js","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","Nav","div","NavBar","handleLogout","useState","toggleMenu","setToggleMenu","window","innerWidth","screenWidth","setScreenWidth","useEffect","changeWidth","addEventListener","removeEventListener","style","marginBottom","to","onClick","Box","Prgh","p","app","fontFamily","textAlign","tagCon","midWidth","display","flexWrap","height","minHeight","margin","border","borderRadius","padding","boxShadow","tagin","alignItem","backgroundColor","marginRight","tagIn","flex","outline","span","marginLeft","cursor","WordCard","id","aword","handleDelete","setCurrentUser","currentUser","userword","name","definition","example","author","written_on","tags","setTags","history","useHistory","fetch","then","r","json","data","justifyContent","fontSize","replace","map","tag","index","removedTag","method","ok","newTags","filter","onKeyDown","e","key","headers","body","JSON","stringify","target","value","res","console","log","push","List","WordList","uwid","words","userwords","word","Margin","UserpageContainer","setWords","length","user_id","word_id","setSingleword","setErrors","setIsLoading","err","errors","slice","indexOf","defid","Search","Input","h2","input","SearchBar","searchTerm","onSearchChange","onSubmit","preventDefault","type","placeholder","onChange","autoComplete","DatabaseContainer","search","setSearch","list","Container","Form","setName","setDefinition","setExample","setAuthor","writtenon","setWrittenon","textShadow","Profile","username","rows","cols","fullname","Title","h3","AuthenticatedApp","credentials","exact","path","form","fontWeight","textDecoration","Login","setUsername","password","setPassword","event","user","error","Signup","setFullname","email","setEmail","Log","H1","h1","rotate","keyframes","Rotate","UnauthenticatedApp","color","App","authChecked","setAuthChecked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.75b2f077.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n/** @jsxImportSource @emotion/react */\n// import { css } from '@emotion/react';\nimport styled from '@emotion/styled'\nimport { keyframes } from 'styled-components'\n\n\nfunction NavBar({ handleLogout }) {\n\n  const [toggleMenu, setToggleMenu] = useState(false)\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth)\n\n  const toggleNav = () => {\n    setToggleMenu(!toggleMenu)\n  }\n\n  useEffect(() => {\n\n    const changeWidth = () => {\n      setScreenWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', changeWidth)\n\n    return () => {\n      window.removeEventListener('resize', changeWidth)\n    }\n  }, [])\n\n  return (\n    \n    <div style={{ marginBottom: \"50px\" }}>\n      {(toggleMenu || screenWidth > 748) && (\n\n        <Nav>\n        <Button><NavLink to=\"/\" style={({ \"text-decoration\": \"none\", \"color\": \"#018A9F\" })}>My Slangs </NavLink></Button>\n\n        <Button><NavLink to=\"/database\" style={({ \"text-decoration\": \"none\", \"color\": \"#018A9F\", })}>Search Slangs</NavLink></Button>\n\n        <Button><NavLink to=\"/submit\" style={({ \"text-decoration\": \"none\", \"color\": \"#018A9F\", })}>Submit Your Slangs</NavLink></Button>\n\n        <Button><NavLink to=\"/profile\" style={({ \"text-decoration\": \"none\", \"color\": \"#018A9F\", })}>Profile</NavLink></Button>\n\n        <Button><NavLink to=\"/\" onClick={handleLogout} style={({ \"text-decoration\": \"none\", \"color\": \"#018A9F\", })}>Logout</NavLink></Button>\n        </Nav>\n      )}\n      \n      {screenWidth > 748 ? null : (<Nav><Button onClick={toggleNav}>🤨</Button></Nav>)}\n      \n      </div>\n  )\n}\n\n\nconst Button = styled.button`\n  padding: 20px;\n  background-color: #f5ffe3;\n  font-family: 'Mouse Memoirs', sans-serif;\n  font-size: 24px;\n  border-radius: 4px;\n  font-weight: bold;\n  border-color :#f5ffe3;\n  border-width: 1px;\n  text-decroration: none;\n  cursor: pointer;\n  transition: box-shadow 0.5s;\n  &:hover {\n    box-shadow: 5px 5px rgba(22, 33, 33, 0.1);\n  }\n  @media screen and (max-width: 748px){\n        text-align: center;\n        margin-right: 0px;\n        padding: 20px 0;\n         &:hover {\n     box-shadow: none\n  }\n    }\n}\n`\n\n\n\nconst Nav = styled.div`\nmargin: 10px;\ndisplay: flex;\njustify-content: space-evenly;\n@media screen and (max-width: 748px){\n    padding: 15px;\n        margin: 30px;\n        flex-direction: column;\n        height: auto;\n    }\n\n`\n\n\n\nexport default NavBar","import { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n/** @jsxImportSource @emotion/react */\n// import { css } from '@emotion/react';\nimport styled from '@emotion/styled'\n\nfunction WordCard({ id, aword, setCurrentUser, currentUser, handleDelete, userword }) {\n  const { name, definition, example, author, written_on } = aword\n\n  const [tags, setTags] = useState([]);\n  const history = useHistory()\n  // const [tagname, setTagname] = useState([]);\n  // const [posted, setPosted] = useState(false);\n  // const [tagInput, setTagInput] = useState([]);\n  // const [isHover, setIshover] = useState(false);\n  \n\n  useEffect(() => {\n    if (!tags) return;\n    fetch(`/userwords/${userword.id}/tags`)\n      .then((r) => r.json())\n      .then(data => setTags(data))\n  }, [])\n\n  // useEffect(() => {\n  //   if (!tags) return;\n  //   fetch(`/userwords/${userword.id}/tags`)\n  //     .then((r) => r.json())\n  //     .then(data => setTags(data))\n  // }, [posted])\n\n  //   console.log(e.key, e.target.value)\n  // let tagname = e.target.value\n  //   console.log({\n  //     name: tagname,\n  //     userword_id: aword.id})\n\n  // console.log(tags)\n\n\n  function addTag(e){\n    if (e.key === \"Enter\"){\n    fetch(`/wordtags/${userword.id}`, {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({name: e.target.value}),\n    })\n    .then(res => res.json())\n    .then(data => {console.log(data)\n      setTags([...tags, data])\n      e.target.value = ''\n    })\n      history.push(\"/\");\n\n    //    .then((r) => {\n    //     if (r.ok) {\n    //       r.json()\n    //     }})\n    //     .then(data =>\n    //       {\n    //       setTags([...tags, data])\n    //       if (e.target.value.length > 0){\n    //         e.target.value = ''\n    //       }\n    // }\n    \n  }\n}\n\n\n    // fetch(`/userwords/${userword.id}/tags`)\n    //   .then((r) => r.json())\n    //   .then(data => setTags(data))\n    // .then((r) => r.json())\n    // .then((data) => {\n    //   setTags(...tags, data)\n    //   console.log(data)\n    // })\n    \n\n      // fetch(`/wordtags/${userword.id}`, {\n      //   method: \"POST\",\n      //   headers: {\n      //     'Content-Type': 'application/json'},\n      //   body: JSON.stringify({\n      //     name: tagname,\n      //     // userword_id: aword.id,\n      //   }),\n      // })\n      // .then(res => res.json())\n      // .then(data => {\n      //   console.log(data)\n      //   setTags(...tags, data)})\n      // .then((r) => {\n      //   if (r.ok) {\n      //     r.json()}}).then(data => \n      //     {\n      //     //setTags(data)\n      //     setTags([...tags, data])\n      //     if (e.target.value.length > 0){\n      //       e.target.value = ''\n      //     }\n      //     history.push(\"/\");\n        \n      //   })\n        // }\n  \n\n\n\n  function removeTag (removedTag) {\n    // console.log(removedTag)\n    fetch(`/wordtags/${removedTag.id}`, {\n      method: \"DELETE\"\n    })\n    .then(r => {\n      if (r.ok) {\n        const newTags = tags.filter(tag => tag !== removedTag)\n        setTags(newTags)\n      }\n    })\n  }\n\n\n  \n  return (\n\n    <Box>\n      <div>\n        <div>\n      <ul>\n          <div style={{ display: 'flex', justifyContent: \"space-between\"}}>\n              <h4 style={{ fontFamily: 'Mouse Memoirs', fontSize:'25px' }}>{name}</h4>\n              <Button style={{ cursor: 'pointer' }} onClick={() => handleDelete(id)}>delete</Button>\n      </div>\n        <Prgh>{definition.replace(/\\[|\\]|\"/g, \"\")}</Prgh>\n        <Prgh>{example.replace(/\\[|\\]|\"/g, \"\")}</Prgh>\n        <Prgh>{author}</Prgh>\n        <Prgh>{written_on}</Prgh>\n      </ul>\n        </div>\n      </div>\n      <div style={app}>\n        <div style={tagCon}>\n          {tags.map((tag, index) => {  \n            return (<div key={index} style={tagin}> \n                  <div>{tag.tag.name}<span onClick={() => removeTag(tag)} style={span}>x</span></div>\n                </div>)\n                })\n              }\n              <input style={tagIn} \n              onKeyDown={addTag}\n              // onChange={(e) => setTagInput(e.target.value)}\n              />\n          {/* <button onClick={addTag}>hi</button> */}\n       </div>\n      </div>\n    </Box>\n \n )\n}\n\n\n\n//STYLE\n\nconst Box = styled.div`\n transition: box-shadow 0.5s;\n  width: 80%;\n  align-item: center;\n  margin-left: 40px;\n  margin-bottom: 30px;\n  border-radius: 10px;\n  border-right: 0.1px #f5ffe3;\n  border-bottom: 5px #f5ffe3;\n  background: #f5ffe3;\n  padding: 5px;\n  border-color:rgba(22, 33, 33, 1);\n  display: grid;\n  grid-gap: 10px;\n  &:hover {\n     box-shadow: 5px 5px rgba(1, 138, 159, 0.5);\n  }\n@media (min-width: 748px) {\n    width: calc(70% - 2rem);\n}\n}\n`\n\nconst Prgh = styled.p`\n  text-align: justify;\n  margin-right: 30px;\n  font-family: 'Roboto Condensed', sans-serif;\n`\nconst Button = styled.button`\n  padding: 10px;\n  margin:10px;\n  background: rgba(1,138,159, 0.6);\n  font-family: 'Mouse Memoirs', sans-serif;\n  font-size: 24px;\n  border-radius: 4px;\n  font-weight: bold;\n  color: white; \n  border-color :#f5ffe3;\n  border-width: 1px;\n  text-decroration: none;\n  cursor: pointer;\n  transition: box-shadow 0.5s;\n  &:hover {\n    box-shadow: 5px 5px rgba(22, 33, 33, 0.1);\n  }\n  @media screen and (max-width: 748px){\n        text-align: center;\n        margin-right: 0px;\n        padding: 20px 0;\n         &:hover {\n     box-shadow: none\n  }\n    }\n}\n`\nconst app = {\n fontFamily: 'Arial',\n textAlign: 'center',\n\n}\n\nconst tagCon = {\n midWidth: '50%',\n  display: 'flex',\n  flexWrap: \"wrap\",\n  height: '50px', \n  minHeight: '20px', \n  margin: \"30px\",\n  border: '1px solid gray', \n  borderRadius :'5px', \n  padding: \"10px\",\n  boxShadow: \"5px 5px rgba(22, 33, 33, 0.1)\"\n}\n\nconst tagin = {\n\n  display: \"flex\",\n\n  padding: \"5px\",\n  border: '1px solid gray',\n  borderRadius: '5px',\n  height: '40px',\n  alignItem: \"center\",\n  backgroundColor: \"#f5ffe3\",\n  marginRight: '5px',\n  margin: '2px 5px 2px 0px',\n\n}\n\nconst tagIn = { \n  \n  border: 'none',\n  flex: 1,\n  backgroundColor: \"#f5ffe3\",\n  outline: 'none', \n  padding: 5,\n}\n\nconst span = {\n \n  marginLeft: \"5px\", \n  cursor: 'pointer',\n  textAlign: 'center',\n  \n}\n\n\n\nexport default WordCard","import React from 'react'\nimport WordCard from \"./wordcard\"\n/** @jsxImportSource @emotion/react */\n// import { css } from '@emotion/react';\nimport styled from '@emotion/styled'\n\n\nfunction WordList({ uwid, words, handleDelete, currentUser }) {\n\n    const userwords = words.map((word) => (\n        <WordCard\n        id={word.id}\n        aword={word}\n        handleDelete={handleDelete}\n        userword={word.userwords[0]}\n        \n        />\n    ))\n\n    return (\n        <div>\n        <List>\n            {userwords}         \n        </List>\n        </div>\n    \n    )\n}\n\nconst List = styled.div`    \nwidth: auto;\nposition: relative;\n\n  \tleft: 30px;\n  \ttop: 30px;\n  \tright: 30px;\n  \tbottom: 30px;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\ngrid-auto-rows: minmax(100px, auto);\ngap: 0.5rem;\n  @media screen and (max-width: 748px){\n        display: flex;\n        flex-direction: column;\n        height: auto;\n    }\n\n`\n\nexport default WordList ","import { useState, useEffect } from 'react'\nimport WordList from \"./userpage/wordlist\"\n// import SearchBar from \"./SearchBar\"\n// import giphy from \"./giphy.gif\"\nimport { NavLink } from \"react-router-dom\";\n/** @jsxImportSource @emotion/react */\n// import { css } from '@emotion/react';\nimport styled from '@emotion/styled'\n\nfunction UserpageContainer({ setCurrentUser, currentUser }) {\n\n  const [words, setWords] = useState([])\n  // const [search, setSearch] = useState(\"\")\n  const [userwords, setUserwords] = useState([])\n\n  // const [tags, setTags] = useState([])\n\n    useEffect(() => {                     \n      fetch(`/users/${currentUser.id}/words`)\n        .then((r) => r.json())\n        .then(data => \n          // console.log(\"I am being called\",data)\n          setWords(data)\n        )\n    }, [])  \n\n\n  // useEffect(() => {\n  //   fetch(`/users/${currentUser.id}/userwords`)\n  //     .then((r) => r.json())\n  //     .then(data =>\n  //       // console.log(\"I am being called\",data)\n  //       setUserwords(data)\n  //     )\n  // }, [])  \n  // console.log(userwords.tags)\n  \n  // const selecttags = userwords.filter((tag) =>Object.values(tag).join(\"_\").toLowerCase().includes(search.toLowerCase())) \n  \n  // const selecttags  = userwords.filter(tag => console.log(tag.filter))\n\n  // selecttags.filter(t => console.log(t))\n\n\n  function handleDelete(id) {\n    console.log(id)\n    fetch(`/userwords/${id}`, { \n      method: \"DELETE\",                   \n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({        \n        user_id: currentUser.id,\n        word_id: id\n      })\n    })\n      .then(r => {\n        if (r.ok) {\n          setWords(words => words.filter(word => word.id !== id))\n        }\n      })\n  }\n\n  return (\n    <div>\n    \n      {words.length > 0 ? (null\n      // <SearchBar searchTerm={search} onSearchChange={setSearch} />\n      ) : (\n        <Margin>\n            <Button><NavLink to=\"/database\" style={({ \"text-decoration\": \"none\", \"color\": \"white\" })}>Add Your Slangs!</NavLink></Button>\n\n          </Margin>\n      )} \n      <WordList words={words} setCurrentUser={setCurrentUser} currentUser={currentUser} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nconst Button = styled.button`\n  margin: auto;\n  padding: 100px;\n  background-image: url('https://s4.gifyu.com/images/giphyc80ae61a12e8e2a5.gif');\n    background-size: cover;\n  font-family: 'Mouse Memoirs', sans-serif;\n  font-size: 24px;\n  border-radius: 10px;\n  font-weight: bold;\n  border-color :#f5ffe3;\n  border-width: 1px;\n  text-decroration: none;\n  cursor: pointer;\n  transition: box-shadow 0.5s;\n\n  &:hover {\n     box-shadow: 5px 5px rgba(22, 33, 33, 0.1);\n  }\n\n`\nconst Margin = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 100px;\n      @media screen and (max-width: 748px){\n        display: flex;\n        height: auto;\n \n    }\n    \n`\n\n\nexport default UserpageContainer","import React, { useState } from 'react'\nimport {useHistory } from 'react-router-dom'\n/** @jsxImportSource @emotion/react */\n// import { css } from '@emotion/react';\nimport styled from '@emotion/styled'\n\nfunction WordCard({id, aword, setCurrentUser, currentUser }) {\n    const { word, definition, example, author, written_on } = aword\n\n    const [singleword, setSingleword] = useState()\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const history = useHistory()\n\n    // console.log(typeof written_on)\n\n  function handleClick() {\n      console.log({\n          name: aword.word,\n          definition: aword.definition,\n          example: aword.example,\n          author: aword.author,\n          written_on: aword.written_on,\n      })\n      fetch(`/users/${currentUser.id}/words`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                name: aword.word,\n                definition: aword.definition,\n                example: aword.example,\n                author: aword.author,\n                written_on: aword.written_on,\n            }),\n        })\n      .then((r) => {\n        setIsLoading(false);\n        if (r.ok) {\n            //sr.json()\n            //   console.log(r.json());\n            // .then(data => setSingleword(data))   \n            // (pessimistic rendering)\n            setSingleword(aword)\n            // (optimistic rendering)\n              history.push(\"/\");\n        } else {\n          r.json()\n            .then((err) => setErrors(err.errors));\n        }\n      })\n  }\n\n    return (\n        <Box>\n          <ul>\n            <div style={{ display: 'flex', justifyContent: \"space-between\"}}>\n            <h4 style={{ fontFamily: 'Mouse Memoirs'}}>{word}</h4>\n            <Button onClick={() => handleClick()}>ADD IT</Button>\n            </div>\n          <Prgh>{definition.replace(/\\[|\\]|\"/g, \"\")}</Prgh>\n          <Prgh>{example.replace(/\\[|\\]|\"/g, \"\")}</Prgh>\n          <Prgh>{author}</Prgh>\n          <Prgh>{written_on.slice(0, written_on.indexOf('T'))}</Prgh>\n        </ul>\n         </Box >\n    )\n}\n\nconst Box = styled.div`\n transition: box-shadow 0.5s;\n  width: 80%;\n  align-item: center;\n  margin-left: 40px;\n  margin-bottom: 30px;\n  border-radius: 10px;\n  border-right: 0.1px #f5ffe3;\n  border-bottom: 5px #f5ffe3;\n  background: #f5ffe3;\n  padding: 5px;\n  border-color:rgba(22, 33, 33, 1);\n  display: grid;\n  grid-gap: 10px;\n  &:hover {\n     box-shadow: 5px 5px rgba(1, 138, 159, 0.5);\n  }\n@media (min-width: 748px) {\n    width: calc(70% - 2rem);\n}\n}\n`\nconst Prgh = styled.p`\n  text-align: justify ;\n  margin-right: 30px;\n  font-family: 'Roboto Condensed', sans-serif;\n`\n\nconst Button = styled.button`\n  padding: 10px;\n  margin:10px;\n  background: rgba(1,138,159, 0.6);\n  font-family: 'Mouse Memoirs', sans-serif;\n  font-size: 24px;\n  border-radius: 4px;\n  font-weight: bold;\n  color: white; \n  border-color :#f5ffe3;\n  border-width: 1px;\n  text-decroration: none;\n  cursor: pointer;\n  transition: box-shadow 0.5s;\n  &:hover {\n    box-shadow: 5px 5px rgba(22, 33, 33, 0.1);\n  }\n  @media screen and (max-width: 748px){\n        text-align: center;\n        margin-right: 0px;\n        padding: 20px 0;\n         &:hover {\n     box-shadow: none\n  }\n    }\n}\n`\n\n\nexport default WordCard","import React from 'react'\nimport WordCard from \"./wordcard\"\n/** @jsxImportSource @emotion/react */\n// import { css } from '@emotion/react';\nimport styled from '@emotion/styled'\n\nfunction WordList({ words, currentUser }) {\n\n    const userwords = words.map((word) => (\n        <WordCard\n            id={word.defid}\n            aword={word}\n            currentUser={currentUser}\n        />\n    ))\n \n    return (\n        <div>\n            <List>\n                {userwords}\n            </List>\n        </div>\n    )\n}\n\nconst List = styled.div`    \nwidth: auto;\nposition: relative;\n  \tleft: 30px;\n  \ttop: 30px;\n  \tright: 30px;\n  \tbottom: 30px;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\ngrid-auto-rows: minmax(100px, auto);\ngap: 0.5rem;\n  @media screen and (max-width: 748px){\n        display: flex;\n        flex-direction: column;\n        height: auto;\n    }\n\n`\n\nexport default WordList  ","import React from 'react'\n/** @jsxImportSource @emotion/react */\n// import { css } from '@emotion/react';\nimport styled from '@emotion/styled'\n\nfunction SearchBar({ searchTerm, onSearchChange }) {\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        onSearchChange(searchTerm)\n    }\n\n    return (\n        <Search onSubmit={handleSubmit}>\n            {/* <Title htmlFor=\"search\">Search Slangs:</Title> */}\n            <Input\n                type=\"text\"\n                id=\"search\"\n                placeholder=\"Search slangs...\"\n                value={searchTerm}\n                onChange={(e) => onSearchChange(e.target.value)}\n                autoComplete=\"on\"\n            />\n        </Search>\n    )\n}\n\nconst Search= styled.div`\nfont-family: 'Mouse Memoirs', sans-serif;\n  padding: 3rem;\n  display: flex;\n  flex-direction: column;\n  margin:80px;\n  @media screen and (max-width: 748px){\n       margin:30px;\n  }\n`\n\nconst Title = styled.h2`\n  font-family: 'Mouse Memoirs', sans-serif;\n`\n\n\nconst Input = styled.input`\n    border-radius: 7px;\n    padding: 0.7rem;\n  border: none;\n  font-family: inherit;\n  font-size: 1.2em;\n  border-bottom: 1.5px gray;\n  transition: all 0.2s;\n  margin: 10px\n  width: 100%;\n    &:focus {\n    outline: none;\n    border-bottom: 4px solid gray;\n}\n`\n\nexport default SearchBar\n\n","import { useState, useEffect } from 'react'\nimport WordList from \"./database/wordlist\"\nimport SearchBar from \"./SearchBar\"\n\n\nfunction DatabaseContainer({ setCurrentUser, currentUser }) {\n\n  const [search, setSearch] = useState(\"\")\n  const [words, setWords] = useState([])\n\n  useEffect(() => {\n    if (!search) return;\n    fetch(`https://api.urbandictionary.com/v0/define?term=${search}`)\n      .then((r) => r.json())\n      .then(data => {\n        // console.log(\"I am being called:\", data)\n        setWords(data.list)\n      })\n  }, [search])\n  \n  return (\n    <div>\n      <SearchBar searchTerm={search} onSearchChange={setSearch} />\n      <WordList words={words}\n        // handleClick={handleClick}\n        setCurrentUser={setCurrentUser} currentUser={currentUser} />\n    </div>\n  )\n}\n\nexport default DatabaseContainer","import React, { useState } from 'react'\nimport { useHistory } from \"react-router\";\nimport styled from '@emotion/styled'\n\nfunction Form({ id, currentUser }) {\n\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [name, setName] = useState();\n  const [definition, setDefinition] = useState();\n  const [example, setExample] = useState();\n  const [author, setAuthor] = useState();\n  const [writtenon, setWrittenon] = useState();\n  const history = useHistory();\n\n\n  function handleSubmit(e) {\n\n    console.log({\n      name: name,\n      definition: definition,\n      example: example,\n      author: author,\n      written_on: writtenon,\n    })\n    e.preventDefault();\n    setIsLoading(true);\n    fetch( `/users/${currentUser.id}/words`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        definition: definition,\n        example: example,\n        author: author,\n        written_on: writtenon,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        history.push(\"/\");\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <Container>\n        <p style={{\n          textAlign: 'center',\n          fontFamily: 'Roboto Condensed',\n          fontSize: '50px',\n          textShadow: '5px 5px rgba(22, 33, 33, 0.2)'\n        }}>Add Slangs</p>\n        <form onSubmit={handleSubmit}>\n          <p><Input\n            type=\"text\"\n            name=\"word\"\n            placeholder=\"Word\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          </p>\n          <p>\n            <Input\n              type=\"text\"\n              name=\"definition\"\n              placeholder=\"Definition\"\n              value={definition}\n              onChange={(e) => setDefinition(e.target.value)}\n            />\n          </p>\n          <p>\n            <Input\n              type=\"text\"\n              name=\"example\"\n              placeholder=\"Example\"\n              value={example}\n              onChange={(e) => setExample(e.target.value)}\n            />\n          </p>\n          <p>\n            <Input\n              type=\"text\"\n              name=\"author\"\n              placeholder=\"Author\"\n              value={author}\n              onChange={(e) => setAuthor(e.target.value)}\n            />\n          </p>\n          <p>\n            <Input\n              type=\"date\"\n              name=\"written_on\"\n              placeholder=\"Written On\"\n              value={writtenon}\n              onChange={(e) => setWrittenon(e.target.value)}\n            />\n          </p>\n          <Button type=\"submit\">Add</Button>\n        </form>\n    </Container>\n  )\n}\n\nconst Button = styled.button`\n  padding: 10px;\n  margin:10px;\n  background: rgba(1,138,159, 0.6);\n  font-family: 'Mouse Memoirs', sans-serif;\n  font-size: 24px;\n  border-radius: 4px;\n  font-weight: bold;\n  color: white; \n  border-color :#f5ffe3;\n  border-width: 1px;\n  text-decroration: none;\n  cursor: pointer;\n  transition: box-shadow 0.5s;\n  &:hover {\n    box-shadow: 5px 5px rgba(22, 33, 33, 0.1);\n  }\n  @media screen and (max-width: 748px){\n        text-align: center;\n        margin-right: 0px;\n        padding: 20px 0;\n         &:hover {\n     box-shadow: none\n  }\n    }\n}\n`\n\nconst Input = styled.input`\n  width: 60%;\n  padding: 12px 20px;\n  size: 50px;\n  margin: 8px 0;\n  display: inline - block;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-sizing: border - box;\n`\n\nconst Container = styled.div`\n      border-radius: 20px;\n  transition: box-shadow 1s;\n  padding: 20px;\n  background-color: #f5ffe3;\n  box-shadow: 5px 5px rgba(22, 33, 33, 0.1);\n  max-width: 600px;\n  margin: 100px auto;\n  padding: 5px;\n  text-align: center;\n  @media screen and (max-width: 748px){\n      width: calc (100% - 2rem);\n        margin: 20px;\n        height: auto;\n        width: auto;\n    }\n\n`\n\n\n\nexport default Form","import React, { useState } from 'react'\nimport { useHistory } from \"react-router\";\nimport styled from '@emotion/styled'\n\nfunction Profile({ id, currentUser }) {\n\n  return (\n    <Container>\n      <p style={{\n        textAlign: 'center',\n        fontFamily: 'Roboto Condensed',\n        fontSize: '50px',\n        textShadow: '5px 5px rgba(22, 33, 33, 0.2)'\n      }}>Your Profile</p>\n      <div>\n        <Prgh>Username: {currentUser.username}</Prgh>\n        <Input\n          name=\"content\"\n          rows=\"1\"\n          cols=\"100\"\n          // value={}\n          // onChange={}\n        />\n        <Prgh>Name: {currentUser.fullname}</Prgh>\n        <Input\n          name=\"content\"\n          rows=\"1\"\n          cols=\"30\"\n        // value={}\n        // onChange={}\n        />\n      </div>\n      <Button style={{ cursor: 'pointer' }}>Edit</Button>\n    </Container>\n  )\n}\n\nconst Button = styled.button`\n  padding: 10px;\n  margin:10px;\n  background: rgba(1,138,159, 0.6);\n  font-family: 'Mouse Memoirs', sans-serif;\n  font-size: 24px;\n  border-radius: 4px;\n  font-weight: bold;\n  color: white; \n  border-color :#f5ffe3;\n  border-width: 1px;\n  text-decroration: none;\n  cursor: pointer;\n  transition: box-shadow 0.5s;\n  &:hover {\n    box-shadow: 5px 5px rgba(22, 33, 33, 0.1);\n  }\n  @media screen and (max-width: 748px){\n        text-align: center;\n        margin-right: 0px;\n        padding: 20px 0;\n         &:hover {\n     box-shadow: none\n  }\n    }\n}\n`\nconst Prgh = styled.p`\n  text-align: center;\n  margin-right: 30px;\n  font-family: 'Roboto Condensed', sans-serif;\n`\n\nconst Input = styled.input`\n  width: 60%;\n  padding: 12px 20px;\n  size: 50px;\n  margin: 8px 0;\n  display: inline - block;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-sizing: border - box;\n`\n\nconst Container = styled.div`\n  border-radius: 20px;\n  transition: box-shadow 1s;\n  padding: 20px;\n  background-color: #f5ffe3;\n  box-shadow: 5px 5px rgba(22, 33, 33, 0.1);\n  max-width: 600px;\n  margin: 100px auto;\n  padding: 5px;\n  text-align: center;\n  @media screen and (max-width: 748px){\n      width: calc (100% - 2rem);\n        margin: 20px;\n        height: auto;\n        width: auto;\n    }\n\n`\nexport default Profile","import './App.css';\nimport React from 'react';\nimport NavBar from './components/NavBar';\nimport UserpageContainer from './components/userpageContainer';\nimport DatabaseContainer from './components/databaseContainer';\nimport Form from './components/Form';\nimport Profile from './components/profile';\n/** @jsxImportSource @emotion/react */\n// import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { Switch, Route, Redirect, useHistory, NavLink } from 'react-router-dom';\n\n\nfunction AuthenticatedApp({ currentUser, setCurrentUser, fullname }) {\n    const history = useHistory()\n\n    // const [search, setSearch] = useState(\"\")\n    // const [words, setWords] = useState([])\n\n\n\n    const handleLogout = () => {\n        fetch('/logout', {\n            method: 'DELETE',\n            credentials: 'include'\n        })\n            .then(res => {\n                if (res.ok) {\n                    setCurrentUser(null)\n                    history.push('/')\n                }\n            })\n    }\n\n    return (\n        <div>\n            <Title><NavLink to=\"/\" style={({ \"textDecoration\": \"none\", \"color\": \"#018A9F\" })}>{fullname}'s Urban Dictionary</NavLink></Title>\n            <NavBar handleLogout={handleLogout} setCurrentUser={setCurrentUser} currentUser={currentUser} />\n            <Switch>\n\n                <Route exact path=\"/\">\n                    <div>\n                        <UserpageContainer setCurrentUser={setCurrentUser} currentUser={currentUser} />\n                    </div>  \n                </Route>\n\n                <Route exact path=\"/database\">\n                    <div>\n                        <DatabaseContainer setCurrentUser={setCurrentUser} currentUser={currentUser} />\n                    </div>\n                </Route>\n\n                <Route exact path=\"/submit\">\n                    <div>\n                        <Form setCurrentUser={setCurrentUser} currentUser={currentUser} id={currentUser.id} />\n                    </div>\n                </Route>\n\n                <Route exact path=\"/profile\">\n                    <div>\n                        <Profile setCurrentUser={setCurrentUser} currentUser={currentUser} id={currentUser.id} />\n                    </div>\n                </Route>\n\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n\n    );\n}       \n\n\n\nconst Title = styled.h3`\ntext-align: center;\nfont-family: 'Mouse Memoirs', sans-serif;\nfont-size: 50px;\ncolor: #018A9F;  \ntransition: text-shadow 1s;\ntext-shadow: 5px 5px rgba(22, 33, 33, 0.2)\n`\n\nexport default AuthenticatedApp;","import React, { useState } from 'react'\nimport { Redirect, useHistory, Link } from 'react-router-dom'\nimport styled from '@emotion/styled'\n\n\nfunction Login({ setCurrentUser }) {\n    const history = useHistory()\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        fetch('/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username, password })\n        })\n            .then(res => {\n                if (res.ok) {\n                    res.json().then(user => {\n                        setCurrentUser(user)\n                        history.push('/')\n                    })\n                } else {\n                    res.json().then(errors => {\n                        console.error(errors)\n                    })\n                }\n            })\n    }\n    return (\n        <div>\n            <Redirect to=\"/\" />\n            <Form onSubmit={handleSubmit}>\n                {/* <h1>Log In</h1> */}\n                <p>\n\n                    <Input\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </p>\n                <p>\n                    <Input\n                        type=\"password\"\n                        placeholder=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </p>\n                &nbsp;\n                &nbsp;\n                &nbsp;\n                &nbsp;\n                <p><Link to=\"/signup\" style={style}>No account here? OMG!</Link></p>\n                <Button type=\"submit\">Log In</Button>\n            </Form>\n        </div>\n    )\n}\n\n\nconst Button = styled.button`\n    padding: 20px;\n    background: rgba(1,138,159, 0.25);\n    font-family: 'Mouse Memoirs', sans-serif;\n    font-size: 24px;\n    border-radius: 8px;\n    font-weight: bold;\n    margin: 10px;\n    align: cetner\n`\n\nconst Form = styled.form`\nwidth: 300px;\n  padding: 64px 15px 24px;\n  margin: auto auto;\n`\n \nconst Input = styled.input`\n    width: 100%;\n    displau:flex;\n    border-radius: 10px;\n    margin-right:80%;\n    padding: 8px 5px;\n      border: 0.5;\n      background-color: #f5ffe3;\n      color: #018A9F;\n      font-family: 'Roboto Condensed';\n      letter-spacing: 0.05em;\n      font-size: 16px;\n      &:hover{\n        background: white;\n        outline: none;\n        border: 0.5;\n      }\n      &:focus {\n        outline: none;\n        border: 0.5;\n      }\n    }\n\n`\n\nconst style = {\n    textAlign: 'left',\n    fontFamily: 'Roboto Condensed, sans-serif',\n    fontWeight: \"bold\",\n    textDecoration: \"none\"\n}\n\nexport default Login","// client/src/components/Signup.js\nimport React, { useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport styled from '@emotion/styled'\n\n\nfunction Signup({ setCurrentUser }) {\n    const history = useHistory()\n    const [username, setUsername] = useState('')\n    const [fullname, setFullname] = useState('')\n    const [password, setPassword] = useState('')\n    const [email, setEmail] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        fetch('/signup', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                password,\n                fullname: fullname,\n                email: email\n            })\n        })\n            .then(res => {\n                if (res.ok) {\n                    res.json().then(user => {\n                        setCurrentUser(user)\n                        history.push('/')\n                    })\n                } else {\n                    res.json().then(errors => {\n                        console.error(errors)\n                    })\n                }\n            })\n    }\n    return (\n        <div>\n\n            <Form onSubmit={handleSubmit}>\n                <p>\n                    <Input\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </p>\n                <p>\n                    <Input\n                        type=\"text\"\n                        name=\"fullname\"\n                        placeholder=\"fullname\"\n                        value={fullname}\n                        onChange={(e) => setFullname(e.target.value)}\n                    />\n                </p>\n\n                <p>\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </p>\n                <p>\n                    <Input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </p>\n                <p><Link to=\"/login\" style={style}>You have account? Then why u here?</Link></p>\n                <Button type=\"submit\">Sign Up</Button>\n            </Form>\n        </div>\n    )\n}\n\nconst Button = styled.button`\n    padding: 20px;\n    background: rgba(1,138,159, 0.25);\n    font-family: 'Mouse Memoirs', sans-serif;\n    font-size: 24px;\n    border-radius: 8px;\n    font-weight: bold;\n    margin: 10px;\n    align: cetner\n`\n\nconst Input = styled.input`\n    width: 100%;\n    displau:flex;\n    border-radius: 10px;\n    margin-right:80%;\n    padding: 8px 5px;\n      border: 0.5;\n      background-color: #f5ffe3;\n      color: #018A9F;\n      font-family: 'Roboto Condensed';\n      letter-spacing: 0.05em;\n      font-size: 16px;\n      &:hover{\n        background: white;\n        outline: none;\n        border: 0.5;\n      }\n      &:focus {\n        outline: none;\n        border: 0.5;\n      }\n    }\n\n`\n\nconst Form = styled.form`\nwidth: 300px;\n  padding: 64px 15px 24px;\n  margin: auto auto;\n`\n\nconst style = {\n    textAlign: 'left',\n    fontFamily: 'Roboto Condensed, sans-serif',\n    fontWeight: \"bold\",\n    textDecoration: \"none\"\n}\n\nexport default Signup","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport styled, { keyframes } from \"styled-components\";\n\nfunction UnauthenticatedApp({ setCurrentUser }) {\n  return (\n    <Log >\n      <div>\n        <h1 style={{\n          textAlign: 'center',\n          color: '#018A9F',\n          fontFamily: 'Mouse Memoirs',\n          fontSize: '60px',\n          fontWeight: \"bold\",\n          textShadow:\" 5px 5px rgba(22, 33, 33, 0.2)\"\n\n        }}>My Urban Dictionary</h1>\n        <H1>Grood with words.</H1>\n      </div>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login setCurrentUser={setCurrentUser} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <Signup setCurrentUser={setCurrentUser} />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n      {/* <Ro><Image src={\"https://i.postimg.cc/nhYLjwPb/Screen-Shot-2022-08-04-at-11-32-03-AM.png\"} alt={\"\"}></Image></Ro> */}\n      <Rotate>😹</Rotate>\n      <Rotate>🍵</Rotate>\n      <Rotate>🫣</Rotate>\n    </Log>\n  )\n}\n\nconst Log = styled.div`\n  border-radius: 20px;\n  transition: box-shadow 1s;\n  padding: 20px;\n  background-color: #f5ffe3;\n\n  align-items: center;\n  box-shadow: 5px 5px rgba(22, 33, 33, 0.1);\n  max-width: 600px;\n  margin: 100px auto;\n  padding: 5px;\n  text-align: center;\n  @media screen and (max-width: 748px){\n      width: calc (100% - 2rem);\n        margin: 20px;\n        height: auto;\n        width: auto;\n    }\n\n`\nconst H1 = styled.h1`\n  margin: auto;\n  padding: 20px;\n  font-family: 'Roboto Condensed', sans-serif;\n  font-size: 36px;\n  font-weight: bold;\n  color :#018A9F;\n  align-item:center;\n  text-shadow: 5px 5px rgba(22, 33, 33, 0.2);\n    \n`\n\n\n  const rotate = keyframes`\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  `\n\n// Here we create a component that will rotate everything we pass in over two seconds\nconst Rotate = styled.div`\n  display: inline-block;\n  animation: ${rotate} 2s linear infinite;\n  padding: 2rem 1rem;\n  font-size: 3rem;\n`;\n\n// const Image = styled.img`\n//   display: flex;\n//   size: 50%;\n//   padding: 2rem 1rem;\n//   width: 30%;\n//   height: 30%;\n//   align-items: center;\n//   margin-left: 12rem;\n//    @media screen and (max-width: 748px){\n//      margin-left: 8.5rem;\n//     }\n// `;\n\n// const Ro = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   padding: 0.5rem;\n// `\n\n\n\nexport default UnauthenticatedApp","import React, { useState, useEffect } from 'react'\nimport AuthenticatedApp from './AuthenticatedApp'\nimport UnauthenticatedApp from './UnauthenticatedApp'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport \"./App.css\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [authChecked, setAuthChecked] = useState(false)\n\n  useEffect(() => {\n    fetch('/me', {\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then((user) => {\n            setCurrentUser(user)\n            setAuthChecked(true)\n          })\n        } else {\n          setAuthChecked(true)\n        }\n      })\n  }, [])\n\n  // console.log(currentUser)\n\n  if (!authChecked) { return <div></div> }\n  return (\n    <Router>\n      {currentUser ? (\n        <AuthenticatedApp\n          setCurrentUser={setCurrentUser}\n          fullname={currentUser.fullname}\n          currentUser={currentUser}\n        />\n      ) : (\n        <UnauthenticatedApp\n          setCurrentUser={setCurrentUser}\n        />\n      )\n      }\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}